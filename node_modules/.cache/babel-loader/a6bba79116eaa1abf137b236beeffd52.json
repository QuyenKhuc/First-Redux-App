{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Redux 2020/React_Redux_Shaun_Wassell/ecosystem/src/todos/NewTodoForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createTodo } from \"./actions\";\nimport \"./NewTodoForm.css\";\nimport { useState } from \"react\";\n\nconst NewTodoForm = ({\n  todos = [],\n  onCreatePressed\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-todo-input\",\n    type: \"text\",\n    placeholder: \"Type your new todo here\",\n    value: inputValue,\n    onChange: e => setInputValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const isDuplicatetext = todos.some(todo => todo.text === inputValue);\n\n      if (!isDuplicatetext) {\n        onCreatePressed(inputValue);\n        setInputValue(\"\");\n      }\n    },\n    className: \"new-todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Create todo\"));\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCreatePressed: text => dispatch(createTodo(text))\n});\n\nexport default connect(mapStateToProps, mapStateToProps)(NewTodoForm);","map":{"version":3,"sources":["/Users/admin/Desktop/Redux 2020/React_Redux_Shaun_Wassell/ecosystem/src/todos/NewTodoForm.js"],"names":["React","connect","createTodo","useState","NewTodoForm","todos","onCreatePressed","inputValue","setInputValue","e","target","value","isDuplicatetext","some","todo","text","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA;AAAd,CAAD,KAAqC;AACvD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,yBAHd;AAIE,IAAA,KAAK,EAAEI,UAJT;AAKE,IAAA,QAAQ,EAAGE,CAAD,IAAOD,aAAa,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMC,eAAe,GAAGP,KAAK,CAACQ,IAAN,CACrBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcR,UADF,CAAxB;;AAGA,UAAI,CAACK,eAAL,EAAsB;AACpBN,QAAAA,eAAe,CAACC,UAAD,CAAf;AACAC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KATH;AAUE,IAAA,SAAS,EAAC,iBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CADF;AAyBD,CA3BD;;AA6BA,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ;AADqB,CAAZ,CAAxB;;AAGA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,eAAe,EAAGS,IAAD,IAAUI,QAAQ,CAACjB,UAAU,CAACa,IAAD,CAAX;AADK,CAAf,CAA3B;;AAIA,eAAed,OAAO,CAACe,eAAD,EAAkBA,eAAlB,CAAP,CAA0CZ,WAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createTodo } from \"./actions\";\nimport \"./NewTodoForm.css\";\nimport { useState } from \"react\";\n\nconst NewTodoForm = ({ todos = [], onCreatePressed }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  return (\n    <div className=\"new-todo-form\">\n      <input\n        className=\"new-todo-input\"\n        type=\"text\"\n        placeholder=\"Type your new todo here\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          const isDuplicatetext = todos.some(\n            (todo) => todo.text === inputValue\n          );\n          if (!isDuplicatetext) {\n            onCreatePressed(inputValue);\n            setInputValue(\"\");\n          }\n        }}\n        className=\"new-todo-button\"\n      >\n        Create todo\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onCreatePressed: (text) => dispatch(createTodo(text)),\n});\n\nexport default connect(mapStateToProps, mapStateToProps)(NewTodoForm);\n"]},"metadata":{},"sourceType":"module"}